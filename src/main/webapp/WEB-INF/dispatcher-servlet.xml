<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task"
	 xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:repository="http://www.springframework.org/schema/data/repository"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd 
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/data/jpa  http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
    http://www.springframework.org/schema/data/repository http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd ">


	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<context:annotation-config />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="main.java.com.nagarro.leavemanagement.repository" />
	<context:component-scan base-package="main.java.com.nagarro.leavemanagement.dao" />
	<context:component-scan base-package="main.java.com.nagarro.leavemanagement.services" />
	<context:component-scan base-package="main.java.com.nagarro.leavemanagement.controllers" />

	 <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="org.postgresql.Driver" />
		<beans:property name="url"
			value="jdbc:postgresql://localhost:5432/leavemanagementsystem" />
		<beans:property name="username" value="leavemanagementsystem" />
		<beans:property name="password" value="leavemanagementsystem" />
	</beans:bean> 
	<!-- <beans:bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="java:/OracleDSJNDI" />
	</beans:bean> -->

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>main.java.com.nagarro.leavemanagement.models.Operator
				</beans:value>
				<beans:value>main.java.com.nagarro.leavemanagement.models.Role
				</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
				<beans:prop key="hibernate.connection_pool_size">5</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" autowire-candidate="true" primary="true">
		<beans:property name="packagesToScan">
			<beans:list>
		        <beans:value>main.java.com.nagarro.leavemanagement.models</beans:value>
		    </beans:list>
		</beans:property>
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="jpaVendorAdapter">
			<beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</beans:property>
        <beans:property name="jpaProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</beans:prop>
                <beans:prop key="hibernate.max_fetch_depth">3</beans:prop>
                <beans:prop key="hibernate.fetch_size">50</beans:prop>
                <beans:prop key="hibernate.batch_size">10</beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
            </beans:props>
        </beans:property>
	</beans:bean>

	<jpa:repositories base-package="main.java.com.nagarro.leavemanagement.repository" />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>

	<task:scheduler id="scheduler" pool-size="10" />
	<task:executor id="executor" pool-size="10" />
	<task:annotation-driven scheduler="scheduler"
		executor="executor" />
	
</beans:beans>
